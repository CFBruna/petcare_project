name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.12"]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Ruff Linter
      run: |
        ruff check .

    - name: Run Mypy
      run: |
        mypy .
      env:
        TESTING: "True"
        DATABASE_URL: "postgres://test_user:test_password@localhost:5432/test_db"
        CELERY_BROKER_URL: "redis://localhost:6379/0"
        CACHE_URL: "redis://localhost:6379/1"
        SECRET_KEY: "a-secret-key-for-testing-purposes-only"
        DEBUG: "False"

    - name: Run Pytest
      run: |
        pytest
      env:
        PYTHONPATH: src
        TESTING: "True"
        DATABASE_URL: "postgres://test_user:test_password@localhost:5432/test_db"
        CELERY_BROKER_URL: "redis://localhost:6379/0"
        CACHE_URL: "redis://localhost:6379/1"
        SECRET_KEY: "a-secret-key-for-testing-purposes-only"
        DEBUG: "False"
